# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: hancock

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
       redis: 
         image: redis
         ports:
           - 6379:6379
       openldap:
         image: rroemhild/test-openldap
         ports:
           - 10636:10636
           - 10389:10389
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nose2 flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with nose 
      env:
         TEST_USERNAME: fry
         TEST_PASSWORD: fry
         S3_ENDPOINT_URL: 'http://s3.amazonaws.com'
         LDAP_HOST: localhost
         LDAP_PORT: 10636
         LDAP_USE_SSL: FALSE
         LDAP_BASE_DN: dc=planetexpress,dc=com
         LDAP_USER_DN: ou=people
         LDAP_USER_LOGIN_ATTR: uid
         LDAP_USER_RDN_ATTR: cn
         LDAP_USER_OBJECT_FILTER: (objectclass=inetOrgPerson)
         LDAP_BIND_USER_DN: cn=admin,dc=planetexpress,dc=com
         LDAP_BIND_USER_PASSWORD: GoodNewsEveryone
         LDAP_USER_SEARCH_SCOPE: SUBTREE     
         ACCESS_KEY: N0T4R34L4CC3SSK3Y
         SECRET_ACCESS_KEY: N0T4R34LS3CR3TACC3SSK3Y
         HANCOCK_REDIS_HOST: redis
      run: |
        nose2 -v --log-level DEBUG
